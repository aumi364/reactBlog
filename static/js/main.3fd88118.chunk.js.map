{"version":3,"sources":["Pages/CreatePost/CreateForm.module.css","Pages/ShowPost/ShowPost.module.css","Components/Card.module.css","Assets/Styles/GlobalStyle.module.css","Pages/ViewPost/ViewPost.module.css","Pages/CreatePost/CreatePost.module.css","Pages/Post.module.css","Utils/Funcs/index.js","Components/Card.jsx","Assets/Img/view.jpg","Assets/Svg/create.svg","Utils/Context/PostContext.js","Pages/Error/Error.jsx","Pages/ViewPost/ViewPost.jsx","Services/PostUrl.js","Services/PostService.js","Pages/ShowPost/ShowPost.jsx","Pages/CreatePost/CreateForm.jsx","Pages/CreatePost/CreatePost.jsx","BlogRouter.js","Pages/Post.js","index.js"],"names":["module","exports","CapitalizeFirstLetter","strngs","strngsArr","split","i","length","charAt","toUpperCase","substring","join","Card","imageUrl","title","body","showId","create","url","useRouteMatch","className","style","Image","src","alt","Title","Body","substr","ShowLink","GlobalStyle","NavLink","to","CreateLink","PostContext","React","createContext","Error","ViewPost","useContext","posts","error","renderPosts","map","post","index","viewImg","id","LargeContaienr","Cards","CreateSvg","PostUrl","getPosts","a","console","log","Axios","get","response","showPost","deletePost","delete","createPost","data","headers","ShowPost","postId","useParams","useState","setError","setPost","deleted","setDeleted","useEffect","status","PostContainer","ShowImg","showImg","Wrapper","Button","onClick","Deleted","TextDeleted","CreateForm","toggler","toggle","setToggle","submitted","setSubmitted","useForm","register","handleSubmit","errors","formState","onSubmit","values","PostForm","Input","type","placeholder","required","name","Errors","Submitted","CreatePost","FormContainer","BlogRouter","exact","path","Post","setPosts","localToggler","localStorage","getItem","toString","setItem","JSON","stringify","parse","Provider","value","viewError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fd88118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostForm\":\"CreateForm_PostForm__21gRD\",\"Input\":\"CreateForm_Input__4Lc9_\",\"Errors\":\"CreateForm_Errors__2GJR0\",\"Button\":\"CreateForm_Button__2qXUt\",\"Submitted\":\"CreateForm_Submitted__1t6Pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowPost\":\"ShowPost_ShowPost__1xcgT\",\"ShowImg\":\"ShowPost_ShowImg__2OpdM\",\"Title\":\"ShowPost_Title__jR98U\",\"Button\":\"ShowPost_Button__2JAHi\",\"Body\":\"ShowPost_Body__1BvPn\",\"Deleted\":\"ShowPost_Deleted__1KVTi\",\"TextDeleted\":\"ShowPost_TextDeleted__2uK2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__jzLhI\",\"Title\":\"Card_Title__1BC0Z\",\"Image\":\"Card_Image__2BIi3\",\"ShowLink\":\"Card_ShowLink__29k_T\",\"CreateLink\":\"Card_CreateLink__3Rc5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LargeContainer\":\"GlobalStyle_LargeContainer__WV8dx\",\"NavLink\":\"GlobalStyle_NavLink__1Kclv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"ViewPost_Cards__3I3qJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"CreatePost_FormContainer__1lyx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__2D-2S\"};","const CapitalizeFirstLetter = (strngs) => {\r\n  let strngsArr = strngs.split(\" \");\r\n  for (let i = 0; i < strngsArr.length; i++) {\r\n    strngsArr[i] =\r\n      strngsArr[i].charAt(0).toUpperCase() + strngsArr[i].substring(1);\r\n  }\r\n  return strngsArr.join(\" \");\r\n};\r\nexport { CapitalizeFirstLetter };\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { CapitalizeFirstLetter } from \"Utils/Funcs/index\";\r\nimport style from \"./Card.module.css\";\r\nimport GlobalStyle from \"Assets/Styles/GlobalStyle.module.css\";\r\nconst Card = ({ imageUrl, title, body, showId, create }) => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={style.Card}>\r\n      {imageUrl && (\r\n        <div className={style.Image}>\r\n          <img src={imageUrl} alt=\"5 Terre\"></img>\r\n        </div>\r\n      )}\r\n      {title && (\r\n        <div className={style.Title}>\r\n          <p>{CapitalizeFirstLetter(title)}</p>\r\n        </div>\r\n      )}\r\n      {body && (\r\n        <div className={style.Body}>\r\n          <p>{`${body.substr(0, 80)}...`}</p>\r\n        </div>\r\n      )}\r\n      {showId && (\r\n        <div className={style.ShowLink}>\r\n          <Link className={GlobalStyle.NavLink} to={`${url}/${showId}`}>\r\n            See More\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {create && (\r\n        <div className={style.CreateLink}>\r\n          <Link className={GlobalStyle.NavLink} to={`${url}/create`}>\r\n            Create a new post\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/view.2de77d7e.jpg\";","export default __webpack_public_path__ + \"static/media/create.77f0595e.svg\";","import React from \"react\";\r\n\r\nconst PostContext = React.createContext(null);\r\n\r\nexport default PostContext;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return <div>error</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useContext } from \"react\";\r\nimport style from \"./ViewPost.module.css\";\r\nimport GlobalStyle from \"Assets/Styles/GlobalStyle.module.css\";\r\nimport Card from \"Components/Card\";\r\nimport viewImg from \"Assets/Img/view.jpg\";\r\nimport CreateSvg from \"Assets/Svg/create.svg\";\r\nimport PostContext from \"Utils/Context/PostContext\";\r\nimport Error from \"Pages/Error/Error\";\r\nconst ViewPost = () => {\r\n  const { posts, error } = useContext(PostContext);\r\n  const renderPosts = posts\r\n    ? posts.map((post, index) => (\r\n        <Card\r\n          key={index}\r\n          imageUrl={viewImg}\r\n          title={post.title}\r\n          body={post.body}\r\n          showId={post.id}\r\n        />\r\n      ))\r\n    : [];\r\n  return (\r\n    <>\r\n      {!error ? (\r\n        <div className={GlobalStyle.LargeContaienr}>\r\n          <div className={style.Cards}>\r\n            <Card imageUrl={CreateSvg} create={true} />\r\n            {renderPosts}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Error />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","const PostUrl = \"https://jsonplaceholder.typicode.com/posts\";\r\nexport default PostUrl;\r\n","import Axios from \"axios\";\r\nimport url from \"./PostUrl\";\r\n\r\nconst getPosts = async () => {\r\n  try {\r\n    console.log(\"fetching\");\r\n    const response = await Axios.get(url);\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\nconst showPost = async (id) => {\r\n  try {\r\n    const response = await Axios.get(`${url}/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\nconst deletePost = async (id) => {\r\n  try {\r\n    const response = await Axios.delete(`${url}/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\nconst createPost = async (data) => {\r\n  try {\r\n    const response = await Axios.post(url, data, {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\nexport { getPosts, showPost, deletePost, createPost };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { showPost, deletePost } from \"Services/PostService\";\r\nimport showImg from \"Assets/Img/view.jpg\";\r\nimport Error from \"Pages/Error/Error\";\r\nimport style from \"./ShowPost.module.css\";\r\nimport { CapitalizeFirstLetter } from \"Utils/Funcs/index\";\r\nconst ShowPost = () => {\r\n  const { postId } = useParams();\r\n  const [error, setError] = useState();\r\n  const [post, setPost] = useState();\r\n  const [deleted, setDeleted] = useState(false);\r\n  useEffect(() => {\r\n    if (showPost) {\r\n      (async () => {\r\n        const response = await showPost(postId);\r\n        if (response.status === 200) {\r\n          setPost(response.data);\r\n        } else {\r\n          setError(response.status);\r\n        }\r\n      })();\r\n    }\r\n  }, []);\r\n  const deleteHandler = (id) => {\r\n    return async () => {\r\n      await deletePost(id);\r\n      setDeleted(true);\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      {!error && !deleted && post && (\r\n        <div className={style.PostContainer}>\r\n          <div className={style.ShowPost}>\r\n            <div className={style.ShowImg}>\r\n              <img src={showImg} alt=\"\" />\r\n            </div>\r\n            <div className={style.Wrapper}>\r\n              <div className={style.Title}>\r\n                {CapitalizeFirstLetter(post.title)}\r\n              </div>\r\n              <div className={style.Body}>{post.body}</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className={style.Button} onClick={deleteHandler(post.id)}>\r\n              X Delete Post!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {error && <Error />}\r\n      {!error && deleted && (\r\n        <div className={style.Deleted}>\r\n          <p className={style.TextDeleted}>The post has been deleted.</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowPost;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport style from \"./CreateForm.module.css\";\r\nimport { createPost } from \"Services/PostService\";\r\nimport PostContext from \"Utils/Context/PostContext\";\r\nconst CreateForm = () => {\r\n  const { toggler } = useContext(PostContext);\r\n  const { toggle, setToggle } = toggler;\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = async (values) => {\r\n    await createPost(values);\r\n    setToggle(!toggle); //as new data is inserted toggle  value is changed for a new fetch.\r\n    setSubmitted(true);\r\n  };\r\n  return (\r\n    <>\r\n      {!submitted && (\r\n        <form className={style.PostForm} onSubmit={handleSubmit(onSubmit)}>\r\n          <label>Name</label>\r\n          <input\r\n            className={style.Input}\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            {...register(\"name\", { required: true })}\r\n          />\r\n\r\n          {errors.name && <p className={style.Errors}>Name is required.</p>}\r\n          <label>Title</label>\r\n          <input\r\n            className={style.Input}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"Title\"\r\n            {...register(\"title\", { required: true })}\r\n          />\r\n          {errors.name && <p className={style.Errors}>Title is required.</p>}\r\n          <label>Body</label>\r\n          <textarea\r\n            className={style.Input}\r\n            type=\"text\"\r\n            id=\"body\"\r\n            {...register(\"body\", { required: true })}\r\n            placeholder=\"Body\"\r\n          />\r\n          {errors.name && <p className={style.Errors}>Body is required.</p>}\r\n          <label>UserId</label>\r\n          <input\r\n            className={style.Input}\r\n            type=\"text\"\r\n            id=\"useId\"\r\n            {...register(\"useId\", { required: true })}\r\n            placeholder=\"userId\"\r\n          />\r\n          {errors.name && <p className={style.Errors}>User Id is required.</p>}\r\n          <button className={style.Button}>Submit</button>\r\n        </form>\r\n      )}\r\n      {submitted && (\r\n        <div className={style.Submitted}>\r\n          <p>The post has been Submitted.</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React from \"react\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport style from \"./CreatePost.module.css\";\r\nconst CreatePost = () => {\r\n  return (\r\n    <div className={style.FormContainer}>\r\n      <CreateForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ViewPost from \"Pages/ViewPost/ViewPost\";\r\nimport ShowPost from \"Pages/ShowPost/ShowPost\";\r\nimport CreatePost from \"Pages/CreatePost/CreatePost\";\r\nconst BlogRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/posts\" />\r\n        </Route>\r\n        <Route exact path=\"/posts\">\r\n          <ViewPost />\r\n        </Route>\r\n        <Route exact path=\"/posts/create\">\r\n          <CreatePost />\r\n        </Route>\r\n        <Route path=\"/posts/:postId\">\r\n          <ShowPost />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default BlogRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BlogRouter from \"../BlogRouter\";\r\nimport style from \"./Post.module.css\";\r\nimport PostContext from \"Utils/Context/PostContext.js\";\r\nimport { getPosts } from \"Services/PostService\";\r\nconst Post = () => {\r\n  const [posts, setPosts] = useState([]); //initialized state for storing posts\r\n  const [toggle, setToggle] = useState(false); // to track if new data is inserted\r\n  const [error, setError] = useState(); // if any error returns\r\n\r\n  useEffect(() => {\r\n    let localToggler = localStorage.getItem(\"toggler\");\r\n    if (localToggler) {\r\n      if (localToggler !== toggle.toString()) {\r\n        (async () => {\r\n          const response = await getPosts();\r\n          if (response.status === 200) {\r\n            localStorage.setItem(\"payload\", JSON.stringify(response.data)); // storing in localstorage for preventing duplicate fetching\r\n            localStorage.setItem(\"toggler\", toggle); // fetching if new data inserted\r\n            setPosts(response.data); //storing the response in the state\r\n          } else {\r\n            setError(response.status);\r\n          }\r\n        })();\r\n      } else {\r\n        const data = JSON.parse(localStorage.getItem(\"payload\"));\r\n        setPosts(data);\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"toggler\", toggle);\r\n      (async () => {\r\n        const response = await getPosts();\r\n        if (response.status === 200) {\r\n          localStorage.setItem(\"payload\", JSON.stringify(response.data));\r\n          setPosts(response.data); //storing the response in the state\r\n        } else {\r\n          setError(response.status);\r\n        }\r\n      })();\r\n    }\r\n  }, [toggle]);\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        toggler: { toggle, setToggle },\r\n        viewError: { error, setError },\r\n        posts: posts,\r\n        error: error,\r\n      }}\r\n    >\r\n      <div className={style.Post}>\r\n        <BlogRouter />\r\n      </div>\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Post from \"Pages/Post\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Post />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}